name: test

on: [push]

env:
  FOUNDRY_PROFILE: ci

jobs:
  Foundry_Tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Run Forge tests
        run: |
          forge test -vvv
        id: test

  Mutation_Testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Vertigo
        run: |
          git clone https://github.com/RareSkills/vertigo-rs
          cd vertigo-rs
          python setup.py develop
          cd ..

      - name: Run Vertigo
        run: |
          python vertigo-rs/vertigo.py run

  Invariant_Testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo 'eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)' >> $GITHUB_ENV
          echo 'export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"' >> $GITHUB_ENV

      - name: Install Slither
        run: pip3 install slither-analyzer --user

      - name: Install Echidna
        run: brew install echidna

      - name: Run Echidna
        run: echidna test/Echidna.t.sol --config echidna.yaml --contract EchidnaTest

  Coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Run Forge coverage
        run: |
          forge coverage --report lcov
        id: coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
